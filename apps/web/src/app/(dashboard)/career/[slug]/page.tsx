'use client'
import { useEffect, useState } from 'react'
import { useRouter, useParams } from 'next/navigation'

interface CareerDetails {
  title: string
  match: number
  description: string
  longDescription: string
  responsibilities: string[]
  hardSkills: Array<{
    name: string
    required: number
    userLevel: number
  }>
  softSkills: Array<{
    name: string
    required: number
    userLevel: number
  }>
  growth: string
  salary: string
  companies: string[]
  roadmap: string[]
}

interface ProfileData {
  interests: string[]
  skills: string[]
  preferences: any
  messages: any[]
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ –¥–ª—è —Å–∫–∏–ª–ª–æ–≤
const SkillProgressBar = ({ skill }: { skill: { name: string; required: number; userLevel: number } }) => {
  const matchPercentage = Math.min((skill.userLevel / skill.required) * 100, 100)
  const isGoodMatch = matchPercentage >= 70
  const isMediumMatch = matchPercentage >= 40
  
  return (
    <div className="mb-4">
      <div className="flex justify-between items-center mb-2">
        <span className="text-sm font-medium text-gray-700">{skill.name}</span>
        <span className={`text-sm font-semibold ${
          isGoodMatch ? 'text-green-600' : 
          isMediumMatch ? 'text-yellow-600' : 
          'text-red-600'
        }`}>
          {Math.round(matchPercentage)}%
        </span>
      </div>
      <div className="w-full bg-gray-200 rounded-full h-3">
        <div 
          className={`h-3 rounded-full transition-all duration-500 ${
            isGoodMatch ? 'bg-green-500' : 
            isMediumMatch ? 'bg-yellow-500' : 
            'bg-red-500'
          }`}
          style={{ width: `${matchPercentage}%` }}
        ></div>
      </div>
      <div className="flex justify-between text-xs text-gray-500 mt-1">
        <span>–í–∞—à —É—Ä–æ–≤–µ–Ω—å: {skill.userLevel}/10</span>
        <span>–¢—Ä–µ–±—É–µ—Ç—Å—è: {skill.required}/10</span>
      </div>
    </div>
  )
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–∫–∏–ª–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
const generateCareerDetails = (careerTitle: string, profileData: ProfileData): CareerDetails => {
  const { interests, skills, preferences } = profileData
  
  // –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
  const careerData: Record<string, CareerDetails> = {
    '–ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π-–º–µ–Ω–µ–¥–∂–µ—Ä': {
      title: '–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä',
      match: 95,
      description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –æ—Ç –∏–¥–µ–∏ –¥–æ –∑–∞–ø—É—Å–∫–∞, —Ä–∞–±–æ—Ç–∞ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
      longDescription: '–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤–µ—Å—å –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–¥—É–∫—Ç–∞ - –æ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ä—ã–Ω–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥. –≠—Ç–æ —Ä–æ–ª—å –Ω–∞ —Å—Ç—ã–∫–µ –±–∏–∑–Ω–µ—Å–∞, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞.',
      responsibilities: [
        '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ä—ã–Ω–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤',
        '–°–±–æ—Ä –∏ –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 
        '–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏ roadmap',
        '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –¥–∏–∑–∞–π–Ω–∞',
        '–ê–Ω–∞–ª–∏–∑ –º–µ—Ç—Ä–∏–∫ –∏ KPI –ø—Ä–æ–¥—É–∫—Ç–∞',
        '–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏',
        '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π'
      ],
      hardSkills: [
        { name: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏', required: 8, userLevel: 7 },
        { name: 'UX/UI –ø–æ–Ω–∏–º–∞–Ω–∏–µ', required: 7, userLevel: 6 },
        { name: 'SQL –∏ —Ä–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏', required: 6, userLevel: 5 },
        { name: 'Agile/Scrum –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏', required: 8, userLevel: 6 },
        { name: 'Wireframing –∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ', required: 6, userLevel: 7 },
        { name: 'A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', required: 7, userLevel: 5 }
      ],
      softSkills: [
        { name: '–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è', required: 9, userLevel: 8 },
        { name: '–õ–∏–¥–µ—Ä—Å—Ç–≤–æ', required: 8, userLevel: 7 },
        { name: '–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ', required: 9, userLevel: 8 },
        { name: '–≠–º–ø–∞—Ç–∏—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', required: 9, userLevel: 9 },
        { name: '–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º', required: 8, userLevel: 8 },
        { name: '–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å', required: 8, userLevel: 9 }
      ],
      growth: '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π',
      salary: '150-350k ‚ÇΩ',
      companies: ['–Ø–Ω–¥–µ–∫—Å', 'VK', 'Ozon', '–°–±–µ—Ä', '–ê–≤–∏—Ç–æ', '–¢–∏–Ω—å–∫–æ—Ñ—Ñ'],
      roadmap: [
        '–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (Google Analytics, Amplitude)',
        '–û—Å–≤–æ–∏—Ç—å SQL –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏',
        '–ò–∑—É—á–∏—Ç—å Agile/Scrum –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏',
        '–ü—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ wireframes (Figma)',
        '–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤—ã UX/UI –¥–∏–∑–∞–π–Ω–∞',
        '–ü–æ–ª—É—á–∏—Ç—å –æ–ø—ã—Ç –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥–æ–π',
        '–†–∞–∑–≤–∏—Ç—å –Ω–∞–≤—ã–∫–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è'
      ]
    },
    '—Ñ—É–ª—Å—Ç–µ–∫-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫': {
      title: '–§—É–ª—Å—Ç–µ–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
      match: 88,
      description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞',
      longDescription: '–§—É–ª—Å—Ç–µ–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥, —Ç–∞–∫ –∏ —Å –±—ç–∫–µ–Ω–¥ —á–∞—Å—Ç—è–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –≠—Ç–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–æ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∏ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö.',
      responsibilities: [
        '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤',
        '–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∏ API',
        '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–±–æ—Ç–∞ —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö',
        '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏',
        '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ª–∞–¥–∫–∞ –∫–æ–¥–∞',
        '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
        'Code review –∏ –º–µ–Ω—Ç–æ—Ä–∏–Ω–≥'
      ],
      hardSkills: [
        { name: 'JavaScript/TypeScript', required: 9, userLevel: 8 },
        { name: 'React/Vue/Angular', required: 8, userLevel: 7 },
        { name: 'Node.js/Python/Java', required: 8, userLevel: 6 },
        { name: '–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (SQL/NoSQL)', required: 7, userLevel: 5 },
        { name: 'Git –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Ä—Å–∏–π', required: 8, userLevel: 8 },
        { name: 'DevOps –∏ –¥–µ–ø–ª–æ–π', required: 6, userLevel: 4 }
      ],
      softSkills: [
        { name: '–õ–æ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ', required: 9, userLevel: 9 },
        { name: '–í–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º', required: 8, userLevel: 8 },
        { name: '–°–∞–º–æ–æ–±—É—á–µ–Ω–∏–µ', required: 9, userLevel: 9 },
        { name: '–†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ', required: 7, userLevel: 8 },
        { name: '–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º', required: 9, userLevel: 8 },
        { name: '–¢–µ—Ä–ø–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å', required: 8, userLevel: 7 }
      ],
      growth: '–í—ã—Å–æ–∫–∏–π',
      salary: '120-280k ‚ÇΩ',
      companies: ['–Ø–Ω–¥–µ–∫—Å', 'VK', '–¢–∏–Ω—å–∫–æ—Ñ—Ñ', '–ê–≤–∏—Ç–æ', 'Ozon', '–ú–µ–≥–∞—Ñ–æ–Ω'],
      roadmap: [
        '–£–≥–ª—É–±–∏—Ç—å –∑–Ω–∞–Ω–∏—è JavaScript –∏ –∏–∑—É—á–∏—Ç—å TypeScript',
        '–û—Å–≤–æ–∏—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ (React/Vue)',
        '–ò–∑—É—á–∏—Ç—å –±—ç–∫–µ–Ω–¥ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ (Node.js/Python)',
        '–ò–∑—É—á–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö',
        '–ü—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤',
        '–ò–∑—É—á–∏—Ç—å DevOps –æ—Å–Ω–æ–≤—ã',
        '–†–∞–∑–≤–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π'
      ]
    }
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
  }

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
  return careerData[careerTitle] || careerData['–ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π-–º–µ–Ω–µ–¥–∂–µ—Ä']
}

export default function CareerDetailPage() {
  const [careerDetails, setCareerDetails] = useState<CareerDetails | null>(null)
  const [profileData, setProfileData] = useState<ProfileData | null>(null)
  const [isLoading, setIsLoading] = useState(true)
  const router = useRouter()
  const params = useParams()
  const slug = params.slug as string

  useEffect(() => {
    const loadData = async () => {
      const data = localStorage.getItem('compass_profile_data')
      if (!data) {
        router.push('/chat')
        return
      }

      const parsedData = JSON.parse(data)
      setProfileData(parsedData)
      
      try {
        // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ä—å–µ—Ä–µ —á–µ—Ä–µ–∑ API
        const careerTitle = decodeURIComponent(slug).replace(/-/g, ' ')
        console.log('üöÄ Requesting career analysis for:', careerTitle)
        
        const response = await fetch('/api/career-analysis', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            profileData: parsedData,
            careerTitle: careerTitle
          })
        })

        if (!response.ok) {
          throw new Error(`API error: ${response.status}`)
        }

        const result = await response.json()
        console.log('‚úÖ Received career analysis')
        setCareerDetails(result)

      } catch (error) {
        console.error('‚ùå Failed to load career analysis:', error)
        
        // Fallback –∫ —Å—Ç–∞—Ç–∏—á–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        const careerTitle = decodeURIComponent(slug).replace(/-/g, ' ')
        const details = generateCareerDetails(careerTitle, parsedData)
        setCareerDetails(details)
      } finally {
        setIsLoading(false)
      }
    }

    loadData()
  }, [slug, router])

  if (isLoading || !careerDetails || !profileData) {
    return (
      <div className="flex items-center justify-center h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <div className="text-lg text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...</div>
        </div>
      </div>
    )
  }

  const overallHardSkillMatch = Math.round(
    careerDetails.hardSkills.reduce((acc, skill) => acc + Math.min((skill.userLevel / skill.required) * 100, 100), 0) / 
    careerDetails.hardSkills.length
  )
  
  const overallSoftSkillMatch = Math.round(
    careerDetails.softSkills.reduce((acc, skill) => acc + Math.min((skill.userLevel / skill.required) * 100, 100), 0) / 
    careerDetails.softSkills.length
  )

  return (
    <div className="max-w-6xl mx-auto p-6 space-y-8">
      {/* Header */}
      <div className="flex items-center gap-4">
        <button 
          onClick={() => router.back()}
          className="flex items-center gap-2 text-gray-600 hover:text-gray-800 transition-colors"
        >
          <span className="text-lg">‚Üê</span>
          –ù–∞–∑–∞–¥ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º
        </button>
      </div>

      {/* Career Overview */}
      <div className="bg-white rounded-lg shadow-lg p-6">
        <div className="flex items-center justify-between mb-4">
          <h1 className="text-3xl font-bold text-gray-900">{careerDetails.title}</h1>
          <div className="text-4xl font-bold text-blue-600">{careerDetails.match}%</div>
        </div>
        
        <p className="text-gray-600 mb-6">{careerDetails.longDescription}</p>
        
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div className="text-center p-4 bg-gray-50 rounded-lg">
            <div className="text-2xl font-bold text-gray-800">{careerDetails.growth}</div>
            <div className="text-sm text-gray-600">–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞</div>
          </div>
          <div className="text-center p-4 bg-gray-50 rounded-lg">
            <div className="text-2xl font-bold text-gray-800">{careerDetails.salary}</div>
            <div className="text-sm text-gray-600">–ó–∞—Ä–ø–ª–∞—Ç–∞ –≤ –º–µ—Å—è—Ü</div>
          </div>
          <div className="text-center p-4 bg-gray-50 rounded-lg">
            <div className="text-2xl font-bold text-gray-800">{Math.round((overallHardSkillMatch + overallSoftSkillMatch) / 2)}%</div>
            <div className="text-sm text-gray-600">–û–±—â–µ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ</div>
          </div>
        </div>
      </div>

      {/* Skills Analysis */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Hard Skills */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-xl font-semibold">üõ†Ô∏è Hard Skills</h2>
            <div className="text-lg font-bold text-blue-600">{overallHardSkillMatch}%</div>
          </div>
          
          <div className="space-y-4">
            {careerDetails.hardSkills.map((skill, index) => (
              <SkillProgressBar key={index} skill={skill} />
            ))}
          </div>
        </div>

        {/* Soft Skills */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-xl font-semibold">üß† Soft Skills</h2>
            <div className="text-lg font-bold text-blue-600">{overallSoftSkillMatch}%</div>
          </div>
          
          <div className="space-y-4">
            {careerDetails.softSkills.map((skill, index) => (
              <SkillProgressBar key={index} skill={skill} />
            ))}
          </div>
        </div>
      </div>

      {/* Responsibilities */}
      <div className="bg-white rounded-lg shadow-lg p-6">
        <h2 className="text-xl font-semibold mb-4">üìã –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          {careerDetails.responsibilities.map((responsibility, index) => (
            <div key={index} className="flex items-start gap-3">
              <div className="w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0"></div>
              <span className="text-gray-700">{responsibility}</span>
            </div>
          ))}
        </div>
      </div>

      {/* Learning Roadmap */}
      <div className="bg-white rounded-lg shadow-lg p-6">
        <h2 className="text-xl font-semibold mb-4">üó∫Ô∏è –ü–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è</h2>
        <div className="space-y-3">
          {careerDetails.roadmap.map((step, index) => (
            <div key={index} className="flex items-start gap-4">
              <div className="w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0">
                {index + 1}
              </div>
              <span className="text-gray-700 pt-1">{step}</span>
            </div>
          ))}
        </div>
      </div>

      {/* Companies */}
      <div className="bg-white rounded-lg shadow-lg p-6">
        <h2 className="text-xl font-semibold mb-4">üè¢ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏</h2>
        <div className="flex flex-wrap gap-3">
          {careerDetails.companies.map((company, index) => (
            <span key={index} className="px-4 py-2 bg-blue-100 text-blue-800 rounded-lg font-medium">
              {company}
            </span>
          ))}
        </div>
      </div>

      {/* Actions */}
      <div className="text-center space-x-4">
        <button 
          onClick={() => router.push('/results')}
          className="bg-gray-500 text-white py-3 px-6 rounded-lg hover:bg-gray-600 transition-colors"
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º
        </button>
        <button className="bg-blue-500 text-white py-3 px-6 rounded-lg hover:bg-blue-600 transition-colors">
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
        </button>
      </div>
    </div>
  )
} 