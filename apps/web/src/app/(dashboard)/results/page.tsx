'use client'
import { useEffect, useState } from 'react'
import { useRouter } from 'next/navigation'

interface ProfileData {
  interests: string[]
  skills: string[]
  preferences: any
  messages: any[]
  completedAt: string
}

interface CareerPath {
  title: string
  match: number
  description: string
  skills: string[]
  growth: string
  salary: string
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—å–µ—Ä–Ω—ã—Ö –ø—É—Ç–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const generateCareerPaths = (profileData: ProfileData): CareerPath[] => {
  const { interests, skills, preferences } = profileData
  const paths: CareerPath[] = []
  
  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ –Ω–∞–≤—ã–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const hasManagement = skills.some(skill => skill.toLowerCase().includes('—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ') || skill.toLowerCase().includes('—É–ø—Ä–∞–≤–ª—è—Ç—å'))
  const hasCoding = skills.some(skill => skill.toLowerCase().includes('–∫–æ–¥') || skill.toLowerCase().includes('–ø—Ä–æ–≥—Ä–∞–º–º'))
  const hasWriting = skills.some(skill => skill.toLowerCase().includes('–ø–∏—Å–∞—Ç—å') || skill.toLowerCase().includes('–Ω–∞–ø–∏—Å–∞–Ω–∏–µ'))
  const hasAnalytics = skills.some(skill => skill.toLowerCase().includes('–∞–Ω–∞–ª–∏–∑'))
  const hasCreative = interests.some(interest => interest.toLowerCase().includes('—Å–æ–∑–¥–∞–≤–∞—Ç—å') || interest.toLowerCase().includes('—Ç–≤–æ—Ä—á'))
  const likesTeamwork = preferences.teamwork === '–∫–æ–º–∞–Ω–¥–Ω–∞—è'
  const likesChallenges = preferences.priority === '–Ω–æ–≤—ã–µ –≤—ã–∑–æ–≤—ã'
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—å–µ—Ä–Ω—ã–µ –ø—É—Ç–∏
  if (hasManagement && likesTeamwork) {
    paths.push({
      title: "–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä",
      match: 95,
      description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –æ—Ç –∏–¥–µ–∏ –¥–æ –∑–∞–ø—É—Å–∫–∞, —Ä–∞–±–æ—Ç–∞ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
      skills: ["–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π", "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è"],
      growth: "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π",
      salary: "150-350k ‚ÇΩ"
    })
  }
  
  if (hasCoding && hasCreative) {
    paths.push({
      title: "–§—É–ª—Å—Ç–µ–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
      match: hasManagement ? 88 : 92,
      description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞",
      skills: ["JavaScript", "React", "Node.js", "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö", "UI/UX"],
      growth: "–í—ã—Å–æ–∫–∏–π",
      salary: "120-280k ‚ÇΩ"
    })
  }
  
  if (hasWriting && hasAnalytics) {
    paths.push({
      title: "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç",
      match: 90,
      description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–∏–∑–Ω–µ—Å-—Å—Ç—Ä–∞—Ç–µ–≥–∏–π, –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–æ–≤, –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–π",
      skills: ["–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏", "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"],
      growth: "–í—ã—Å–æ–∫–∏–π",
      salary: "180-400k ‚ÇΩ"
    })
  }
  
  if (hasCreative && likesTeamwork) {
    paths.push({
      title: "–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä",
      match: 85,
      description: "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ü–µ–ø—Ü–∏–π –∏ –≤–∏–¥–µ–Ω–∏—è",
      skills: ["–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π", "–î–∏–∑–∞–π–Ω-–º—ã—à–ª–µ–Ω–∏–µ", "–ë—Ä–µ–Ω–¥-—Å—Ç—Ä–∞—Ç–µ–≥–∏—è"],
      growth: "–í—ã—Å–æ–∫–∏–π",
      salary: "160-320k ‚ÇΩ"
    })
  }
  
  if (hasAnalytics && likesChallenges) {
    paths.push({
      title: "Data Scientist",
      match: 87,
      description: "–ê–Ω–∞–ª–∏–∑ –±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö, –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ, –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
      skills: ["Python", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ", "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö"],
      growth: "–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π",
      salary: "140-300k ‚ÇΩ"
    })
  }
  
  // –ï—Å–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, –¥–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
  if (paths.length < 3) {
    paths.push({
      title: "–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫",
      match: 75,
      description: "–ê–Ω–∞–ª–∏–∑ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
      skills: ["–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ", "–ü—Ä–æ—Ü–µ—Å—Å—ã", "–î–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", "SQL"],
      growth: "–°—Ç–∞–±–∏–ª—å–Ω—ã–π",
      salary: "100-200k ‚ÇΩ"
    })
  }
  
  return paths.slice(0, 5) // –ú–∞–∫—Å–∏–º—É–º 5 –ø—É—Ç–µ–π
}

export default function ResultsPage() {
  const [profileData, setProfileData] = useState<ProfileData | null>(null)
  const [careerPaths, setCareerPaths] = useState<CareerPath[]>([])
  const [isLoading, setIsLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const router = useRouter()

  useEffect(() => {
    const loadData = async () => {
      const data = localStorage.getItem('compass_profile_data')
      if (!data) {
        router.push('/chat')
        return
      }

      const parsedData = JSON.parse(data)
      setProfileData(parsedData)

      try {
        console.log('üöÄ Requesting AI career recommendations...')
        
        const response = await fetch('/api/career-recommendations', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            profileData: parsedData
          })
        })

        if (!response.ok) {
          throw new Error(`API error: ${response.status}`)
        }

        const result = await response.json()
        console.log('‚úÖ Received AI recommendations:', result.careerPaths?.length || 0)
        
        if (result.careerPaths && Array.isArray(result.careerPaths)) {
          setCareerPaths(result.careerPaths)
        } else {
          throw new Error('Invalid response format')
        }

      } catch (error) {
        console.error('‚ùå Failed to load career recommendations:', error)
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.')
        
        // Fallback –∫ —Å—Ç–∞—Ç–∏—á–Ω—ã–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        setCareerPaths(generateCareerPaths(parsedData))
      } finally {
        setIsLoading(false)
      }
    }

    loadData()
  }, [router])

  if (isLoading || !profileData) {
    return (
      <div className="flex items-center justify-center h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <div className="text-lg text-gray-600">–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–∞—Ä—å–µ—Ä–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...</div>
          <div className="text-sm text-gray-500 mt-2">AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã</div>
        </div>
      </div>
    )
  }

  return (
    <div className="max-w-6xl mx-auto p-6 space-y-8">
      {/* Header */}
      <div className="text-center">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">–¢–≤–æ–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–∞—Ä—å–µ—Ä–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h1>
        <p className="text-gray-600">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã AI –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Ç–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤</p>
        {error && (
          <div className="mt-4 p-4 bg-yellow-100 border border-yellow-400 rounded-lg">
            <p className="text-yellow-800">{error}</p>
          </div>
        )}
      </div>

      {/* Profile Summary */}
      <div className="bg-white rounded-lg shadow-lg p-6">
        <h2 className="text-xl font-semibold mb-4">üìã –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <h3 className="font-medium text-gray-700 mb-2">üéØ –ò–Ω—Ç–µ—Ä–µ—Å—ã</h3>
            <div className="flex flex-wrap gap-2">
              {profileData.interests?.map((interest, index) => (
                <span key={index} className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm">
                  {interest}
                </span>
              ))}
            </div>
          </div>
          <div>
            <h3 className="font-medium text-gray-700 mb-2">üí™ –ù–∞–≤—ã–∫–∏</h3>
            <div className="flex flex-wrap gap-2">
              {profileData.skills?.map((skill, index) => (
                <span key={index} className="px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm">
                  {skill}
                </span>
              ))}
            </div>
          </div>
        </div>
        
        <div className="mt-6 p-4 bg-gray-50 rounded-lg">
          <h3 className="font-medium text-gray-700 mb-2">‚ú® –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è</h3>
          <div className="text-gray-600 space-y-1">
            {profileData.preferences.teamwork && <p>–†–∞–±–æ—Ç–∞: {profileData.preferences.teamwork}</p>}
            {profileData.preferences.workType && <p>–¢–∏–ø —Ä–∞–±–æ—Ç—ã: {profileData.preferences.workType}</p>}
            {profileData.preferences.priority && <p>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {profileData.preferences.priority}</p>}
          </div>
        </div>
      </div>

      {/* Career Recommendations */}
      <div>
        <div className="flex items-center justify-between mb-6">
          <h2 className="text-2xl font-semibold">üöÄ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∫–∞—Ä—å–µ—Ä–Ω—ã–µ –ø—É—Ç–∏</h2>
          <div className="text-sm text-gray-500 bg-blue-50 px-3 py-1 rounded-full">
            ü§ñ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ AI
          </div>
        </div>
        
        {careerPaths.length === 0 ? (
          <div className="text-center py-8">
            <div className="text-gray-500">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è...</div>
          </div>
        ) : (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {careerPaths.map((career: CareerPath, index: number) => (
            <div key={index} className="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-semibold">{career.title}</h3>
                <div className="text-2xl font-bold text-blue-600">{career.match}%</div>
              </div>
              
              <p className="text-gray-600 mb-4">{career.description}</p>
              
              <div className="space-y-3">
                <div>
                  <h4 className="font-medium text-sm text-gray-700">–ö–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏:</h4>
                  <div className="flex flex-wrap gap-1 mt-1">
                    {career.skills.map((skill: string, skillIndex: number) => (
                      <span key={skillIndex} className="px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs">
                        {skill}
                      </span>
                    ))}
                  </div>
                </div>
                
                <div className="flex justify-between text-sm">
                  <div>
                    <span className="text-gray-500">–†–æ—Å—Ç:</span>
                    <span className="ml-1 font-medium">{career.growth}</span>
                  </div>
                  <div>
                    <span className="text-gray-500">–ó–∞—Ä–ø–ª–∞—Ç–∞:</span>  
                    <span className="ml-1 font-medium">{career.salary}</span>
                  </div>
                </div>
              </div>
              
              <button 
                onClick={() => router.push(`/career/${encodeURIComponent(career.title.toLowerCase().replace(/\s+/g, '-'))}`)}
                className="w-full mt-4 bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 transition-colors"
              >
                –£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ
              </button>
            </div>
          ))}
          </div>
        )}
      </div>

      {/* Actions */}
      <div className="text-center space-x-4">
        <button 
          onClick={() => router.push('/chat')}
          className="bg-gray-500 text-white py-2 px-6 rounded-lg hover:bg-gray-600 transition-colors"
        >
          –ü—Ä–æ–π—Ç–∏ –∞–Ω–∞–ª–∏–∑ –∑–∞–Ω–æ–≤–æ
        </button>
        <button className="bg-blue-500 text-white py-2 px-6 rounded-lg hover:bg-blue-600 transition-colors">
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        </button>
      </div>
    </div>
  )
} 