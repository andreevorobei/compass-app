'use client'

import { useEffect } from 'react'
import { useAuthStore } from '@/store'
import { DashboardLayout } from '@/components/layout/DashboardLayout'
import { 
  BarChart3, 
  MessageSquare, 
  Target, 
  TrendingUp,
  Calendar,
  CheckCircle,
  Clock
} from 'lucide-react'

// Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const stats = [
  {
    name: '–í—Å–µ–≥–æ —Ü–µ–ª–µ–π',
    value: '12',
    change: '+2.5%',
    changeType: 'positive' as const,
    icon: Target,
  },
  {
    name: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ —Ü–µ–ª–µ–π',
    value: '8',
    change: '+12%',
    changeType: 'positive' as const,
    icon: CheckCircle,
  },
  {
    name: 'AI —Å–µ—Å—Å–∏–π',
    value: '24',
    change: '+4.1%',
    changeType: 'positive' as const,
    icon: MessageSquare,
  },
  {
    name: '–ê–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è',
    value: '2.4—á',
    change: '-0.5%',
    changeType: 'negative' as const,
    icon: Clock,
  },
]

const recentActivities = [
  {
    id: 1,
    type: 'goal',
    title: '–ó–∞–≤–µ—Ä—à–µ–Ω–∞ —Ü–µ–ª—å "–ò–∑—É—á–∏—Ç—å React"',
    time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
    icon: CheckCircle,
    color: 'text-green-600',
  },
  {
    id: 2,
    type: 'chat',
    title: 'AI —Å–µ—Å—Å–∏—è: –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—å–µ—Ä—ã',
    time: '4 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
    icon: MessageSquare,
    color: 'text-blue-600',
  },
  {
    id: 3,
    type: 'analytics',
    title: '–ù–æ–≤—ã–π –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–≥—Ä–µ—Å—Å—É',
    time: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥',
    icon: BarChart3,
    color: 'text-purple-600',
  },
]

export default function DashboardPage() {
  const { user, isAuthenticated } = useAuthStore()

  // –î–µ–º–æ: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ª–æ–≥–∏–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  useEffect(() => {
    if (!isAuthenticated) {
      const demoLogin = () => {
        const { login } = useAuthStore.getState()
        login({
          id: 'demo-user',
          email: 'demo@compass.ai',
          name: 'Demo User',
        })
      }
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      setTimeout(demoLogin, 500)
    }
  }, [isAuthenticated])

  if (!isAuthenticated) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ Dashboard...</p>
        </div>
      </div>
    )
  }

  return (
    <DashboardLayout>
      <div className="space-y-6">
        {/* Welcome Section */}
        <div className="bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg p-6 text-white">
          <h1 className="text-2xl font-bold mb-2">
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user?.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}! üëã
          </h1>
          <p className="text-blue-100">
            –í–æ—Ç –∫—Ä–∞—Ç–∫–∏–π –æ–±–∑–æ—Ä –≤–∞—à–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
          </p>
        </div>

        {/* Stats Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {stats.map((stat) => {
            const Icon = stat.icon
            return (
              <div key={stat.name} className="bg-white rounded-lg p-6 shadow-sm border border-gray-200">
                <div className="flex items-center justify-between">
                  <div>
                    <p className="text-sm text-gray-600 mb-1">{stat.name}</p>
                    <p className="text-2xl font-bold text-gray-900">{stat.value}</p>
                    <p className={`text-sm ${
                      stat.changeType === 'positive' ? 'text-green-600' : 'text-red-600'
                    }`}>
                      {stat.change}
                    </p>
                  </div>
                  <div className="w-12 h-12 bg-blue-50 rounded-lg flex items-center justify-center">
                    <Icon className="w-6 h-6 text-blue-600" />
                  </div>
                </div>
              </div>
            )
          })}
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Recent Activity */}
          <div className="bg-white rounded-lg p-6 shadow-sm border border-gray-200">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
            <div className="space-y-4">
              {recentActivities.map((activity) => {
                const Icon = activity.icon
                return (
                  <div key={activity.id} className="flex items-start gap-3">
                    <div className={`w-8 h-8 rounded-full bg-gray-50 flex items-center justify-center ${activity.color}`}>
                      <Icon className="w-4 h-4" />
                    </div>
                    <div className="flex-1 min-w-0">
                      <p className="text-sm font-medium text-gray-900">{activity.title}</p>
                      <p className="text-xs text-gray-500">{activity.time}</p>
                    </div>
                  </div>
                )
              })}
            </div>
          </div>

          {/* Quick Actions */}
          <div className="bg-white rounded-lg p-6 shadow-sm border border-gray-200">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
            <div className="grid grid-cols-2 gap-4">
              <button className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left">
                <MessageSquare className="w-6 h-6 text-blue-600 mb-2" />
                <p className="text-sm font-medium text-gray-900">–ù–æ–≤—ã–π AI —á–∞—Ç</p>
                <p className="text-xs text-gray-500">–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É</p>
              </button>
              
              <button className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left">
                <Target className="w-6 h-6 text-green-600 mb-2" />
                <p className="text-sm font-medium text-gray-900">–î–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å</p>
                <p className="text-xs text-gray-500">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ü–µ–ª—å</p>
              </button>
              
              <button className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left">
                <BarChart3 className="w-6 h-6 text-purple-600 mb-2" />
                <p className="text-sm font-medium text-gray-900">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç—ã</p>
                <p className="text-xs text-gray-500">–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</p>
              </button>
              
              <button className="p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors text-left">
                <Calendar className="w-6 h-6 text-orange-600 mb-2" />
                <p className="text-sm font-medium text-gray-900">–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫</p>
                <p className="text-xs text-gray-500">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º</p>
              </button>
            </div>
          </div>
        </div>

        {/* Progress Chart Placeholder */}
        <div className="bg-white rounded-lg p-6 shadow-sm border border-gray-200">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">–ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞ –Ω–µ–¥–µ–ª—é</h3>
          <div className="h-64 bg-gray-50 rounded-lg flex items-center justify-center">
            <div className="text-center text-gray-500">
              <TrendingUp className="w-12 h-12 mx-auto mb-2" />
              <p>–ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</p>
              <p className="text-sm">–ë—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —Ñ–∞–∑–∞—Ö</p>
            </div>
          </div>
        </div>
      </div>
    </DashboardLayout>
  )
}
